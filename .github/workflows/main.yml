name: App Builder
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # for projects that use labels and PRs,
      # try https://github.com/mikepenz/release-changelog-builder-action instead
      # TODO: use API to collect commit messages
      - name: Build Changelog
        id: build_changelog
        run: echo "changelog=- ADD CHANGELOG" >> $GITHUB_OUTPUT

      - name: Node.js setup
        uses: actions/setup-node@v4
        # NOTE: enterprise developers may hard code a version
        with:
          node-version: latest

      - name: install Rust (nightly)
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: wasm32-unknown-unknown

      - name: Install CUDA toolkit on Linux
        uses: Jimver/cuda-toolkit@v0.2.11
        if: matrix.platform == 'ubuntu-latest'
        id: cuda-toolkit-linux
        with:
          cuda: '12.2.0'
          method: 'network'
          non-cuda-sub-packages: '["libcublas","libcublas-dev"]'
          sub-packages: '["nvcc","compiler","libraries","libraries-dev","cudart","cudart-dev"]'

      - name: Install CUDA toolkit on Windows
        uses: Jimver/cuda-toolkit@v0.2.11
        if: matrix.platform == 'windows-latest'
        id: cuda-toolkit-windows
        with:
          cuda: '12.2.0'
          method: 'local'

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf llvm clang

      - name: Install Trunk
        uses: jetli/trunk-action@v0.4.0
        with:
          version: "latest"

      - name: Install TailwindCSS
        run: |
          npm install -D tailwindcss

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # tauri-action replaces \_\_VERSION\_\_ with the app version
          tagName: ${{ github.ref_name }}
          releaseName: "Tauri Llama v__VERSION__"
          releaseBody: |
            ${{steps.build_changelog.outputs.changelog}}
            See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
